{"version":3,"file":"static/js/567.672dec42.chunk.js","mappings":"+NAUA,MA4BA,EA5BuBA,KACrB,MAAOC,EAASC,IAAcC,EAAAA,EAAAA,UAA8B,OACtD,GAAEC,IAAOC,EAAAA,EAAAA,KASb,OAPFC,EAAAA,EAAAA,YAAU,KACRC,EAAAA,QAAQC,OAAO,eACfC,EAAAA,EAAAA,IAAgBL,GAAKM,MAAKT,IACxBC,EAAWD,EAAQ,IAErBM,EAAAA,QAAQI,QAAQ,GACf,CAACP,KAECQ,EAAAA,EAAAA,KAAA,OAAAC,SACAZ,GAAWA,EAAQa,QAAQC,OAAS,GACnCH,EAAAA,EAAAA,KAAA,MAAAC,SACGZ,EAAQa,QAAQE,KAAIC,IACnBC,EAAAA,EAAAA,MAAA,MAAAL,SAAA,EACED,EAAAA,EAAAA,KAAA,MAAAC,SAAKI,EAAOE,UACZD,EAAAA,EAAAA,MAAA,KAAAL,SAAA,CAAG,cAAYI,EAAOG,aAFfH,EAAOb,SAOpBQ,EAAAA,EAAAA,KAAA,KAAAC,SAAG,uBAED,C,8DCzBV,MAAMQ,EAAU,4CAUHC,EAAkBC,UAC7B,MAAMC,QAAiBC,MAAM,4CAADC,OACkBL,EAAO,WAAAK,OAAUC,IAG/D,aADyCH,EAASI,MACvC,EAGAC,EAAkBN,UAC7B,MAAMC,QAAiBC,MAAM,sCAADC,OACYtB,GAAEsB,OAAGL,IAG7C,aADiCG,EAASI,MAC/B,EAGAE,EAAkBP,UAC7B,MAAMC,QAAiBC,MAAM,sCAADC,OACYtB,EAAE,YAAAsB,OAAWL,IAGrD,aADiCG,EAASI,MAC/B,EAGAnB,EAAkBc,UAC7B,MAAMC,QAAiBC,MAAM,sCAADC,OACYtB,EAAE,YAAAsB,OAAWL,IAGrD,aADiCG,EAASI,MAC/B,C","sources":["components/Reviews/Reviews.tsx","services/content-api.tsx"],"sourcesContent":["import React, {  useEffect, useState } from 'react';\r\nimport { getMovieReviews } from '../../services/content-api';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Loading } from 'notiflix/build/notiflix-loading-aio';\r\n\r\n\r\nimport {\r\n   MovieReviews\r\n} from \"../../models\";\r\n\r\nconst Cast: React.FC = () => {\r\n  const [reviews, setReviews] = useState<MovieReviews | null>(null);\r\n  const { id } = useParams<{ id: string }>();\r\n\r\n  useEffect(() => {\r\n    Loading.circle('Loading...');\r\n    getMovieReviews(id!).then(reviews => {\r\n      setReviews(reviews);\r\n    });\r\n    Loading.remove();\r\n  }, [id]);\r\n    return (\r\n       <div>\r\n      {reviews && reviews.results.length > 0 ? (\r\n        <ul>\r\n          {reviews.results.map(review => (\r\n            <li key={review.id}>\r\n              <h3>{review.author}</h3>\r\n              <p>Character: {review.content}</p>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        <p>No reviews found.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default Cast;","import {\r\n  Movie,\r\n  TrendingMoviesResponse,\r\n  SearchMoviesResponse,\r\n  MovieDetails,\r\n  MovieCredits,\r\n  MovieReviews,\r\n} from \"../models\";\r\n\r\n\r\nconst API_KEY = '?api_key=1bee1caa8eeb54a46f7cee2e958da6e1';\r\n\r\nexport const trendingMovies = async (): Promise<Movie[]> => {\r\n  const response = await fetch(\r\n    `https://api.themoviedb.org/3/trending/movie/day${API_KEY}`\r\n  );\r\n  const data: TrendingMoviesResponse = await response.json();\r\n  return data.results;\r\n};\r\n\r\nexport const getSearchMovies = async (q: string): Promise<SearchMoviesResponse> => {\r\n  const response = await fetch(\r\n    `https://api.themoviedb.org/3/search/movie${API_KEY}&query=${q}`\r\n  );\r\n  const data: SearchMoviesResponse = await response.json();\r\n  return data;\r\n};\r\n\r\nexport const getMovieDetails = async (id: string): Promise<MovieDetails> => {\r\n  const response = await fetch(\r\n    `https://api.themoviedb.org/3/movie/${id}${API_KEY}`\r\n  );\r\n  const data: MovieDetails = await response.json();\r\n  return data;\r\n};\r\n\r\nexport const getMovieCredits = async (id: string): Promise<MovieCredits> => {\r\n  const response = await fetch(\r\n    `https://api.themoviedb.org/3/movie/${id}/credits${API_KEY}`\r\n  );\r\n  const data: MovieCredits = await response.json();\r\n  return data;\r\n};\r\n\r\nexport const getMovieReviews = async (id: string): Promise<MovieReviews> => {\r\n  const response = await fetch(\r\n    `https://api.themoviedb.org/3/movie/${id}/reviews${API_KEY}`\r\n  );\r\n  const data: MovieReviews = await response.json();\r\n  return data;\r\n};\r\n"],"names":["Cast","reviews","setReviews","useState","id","useParams","useEffect","Loading","circle","getMovieReviews","then","remove","_jsx","children","results","length","map","review","_jsxs","author","content","API_KEY","getSearchMovies","async","response","fetch","concat","q","json","getMovieDetails","getMovieCredits"],"sourceRoot":""}