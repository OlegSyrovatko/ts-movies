{"version":3,"file":"static/js/703.50257817.chunk.js","mappings":"oPAYA,MAAMA,EAAwD,CAC5DC,KAAM,CACJC,MAAO,KAETC,MAAO,CACLC,QAAS,OACTC,cAAe,SACfC,aAAc,KAIH,SAASC,IACtB,MAAM,MAAEC,IAAUC,EAAAA,EAAAA,KACZC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,OACVC,EAAUC,IAAeC,EAAAA,EAAAA,UAAiB,IAEjD,IAAKR,EAEH,OADAE,EAAS,UACF,KAuBT,OACEO,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,yBAEJD,EAAAA,EAAAA,MAAA,QAAMG,SAjBWC,UAEnB,GADAC,EAAEC,iBACEf,EAAO,CACT,MAAMgB,QAAeZ,EACnBa,EAAAA,GAAeC,SAAS,CAAEZ,WAAUN,WAElCiB,EAAAA,GAAeC,SAASC,UAAUC,MAAMJ,IAC1Cd,EAAS,UAEXK,EAAY,GACd,GAOgCc,MAAO7B,EAAOC,KAAM6B,aAAa,MAAKZ,SAAA,EAClEC,EAAAA,EAAAA,KAAA,SAAOU,MAAO7B,EAAOG,MAAMe,UACzBC,EAAAA,EAAAA,KAACY,EAAAA,EAAS,CACRC,UAAQ,EACR7B,MAAM,WACN8B,QAAQ,WACRC,KAAK,WACLC,KAAK,WACLC,MAAOtB,EACPuB,SAjCYC,IACpB,MAAM,KAAEJ,EAAI,MAAEE,GAAUE,EAAMC,OACjB,aAATL,GACFnB,EAAYqB,EACd,OAiCIjB,EAAAA,EAAAA,KAACqB,EAAAA,EAAM,CAACP,QAAQ,YAAYE,KAAK,SAAQjB,SAAC,cAMlD,C","sources":["pages/ResetPwd/ResetPwd.tsx"],"sourcesContent":["import { useState, ChangeEvent, CSSProperties } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { authOperations } from \"../../redux/auth\";\r\nimport Button from \"@mui/material/Button\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport { AppDispatch } from \"../../store\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\n\r\ntype Params = {\r\n  token: string;\r\n};\r\n\r\nconst styles: { form: CSSProperties; label: CSSProperties } = {\r\n  form: {\r\n    width: 320,\r\n  },\r\n  label: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    marginBottom: 15,\r\n  },\r\n};\r\n\r\nexport default function ResetPwd() {\r\n  const { token } = useParams<Params>();\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch<AppDispatch>();\r\n  const [password, setPassword] = useState<string>(\"\");\r\n\r\n  if (!token) {\r\n    navigate(\"/error\");\r\n    return null;\r\n  }\r\n\r\n  const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = event.target;\r\n    if (name === \"password\") {\r\n      setPassword(value);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (token) {\r\n      const result = await dispatch(\r\n        authOperations.ResetPWD({ password, token })\r\n      );\r\n      if (authOperations.ResetPWD.fulfilled.match(result)) {\r\n        navigate(\"/login\");\r\n      }\r\n      setPassword(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Reset Password Page</h1>\r\n\r\n      <form onSubmit={handleSubmit} style={styles.form} autoComplete=\"off\">\r\n        <label style={styles.label}>\r\n          <TextField\r\n            required\r\n            label=\"Password\"\r\n            variant=\"outlined\"\r\n            name=\"password\"\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n\r\n        <Button variant=\"contained\" type=\"submit\">\r\n          Send\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["styles","form","width","label","display","flexDirection","marginBottom","ResetPwd","token","useParams","navigate","useNavigate","dispatch","useDispatch","password","setPassword","useState","_jsxs","children","_jsx","onSubmit","async","e","preventDefault","result","authOperations","ResetPWD","fulfilled","match","style","autoComplete","TextField","required","variant","name","type","value","onChange","event","target","Button"],"sourceRoot":""}