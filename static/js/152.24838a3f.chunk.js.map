{"version":3,"file":"static/js/152.24838a3f.chunk.js","mappings":"0OAQA,MAAMA,EAIF,CACFC,KAAM,CACJC,MAAO,KAETC,MAAO,CACLC,QAAS,OACTC,cAAe,SACfC,aAAc,IAEhBC,KAAM,CACJC,MAAO,UACPC,eAAgB,OAChBL,QAAS,QACTM,WAAY,GACZC,UAAW,SACXC,WAAY,KAID,SAASC,IACtB,MAAMC,GAAWC,EAAAA,EAAAA,OACVC,EAAOC,IAAYC,EAAAA,EAAAA,UAAiB,KACpCC,EAAUC,IAAeF,EAAAA,EAAAA,UAAiB,IAE3CG,EAAgBC,IACpB,MAAM,KAAEC,EAAI,MAAEC,GAAUF,EAAMG,OAC9B,OAAQF,GACN,IAAK,QACHN,EAASO,GACT,MACF,IAAK,WACHJ,EAAYI,GAIhB,EAUF,OACEE,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,gBAEJD,EAAAA,EAAAA,MAAA,QAAMG,SAXYC,IACpBA,EAAEC,iBACFjB,EAASkB,EAAAA,GAAeC,MAAM,CAAEjB,QAAOG,cACvCF,EAAS,IACTG,EAAY,GAAG,EAOiBc,MAAOlC,EAAOC,KAAMkC,aAAa,MAAKR,SAAA,EAClEC,EAAAA,EAAAA,KAAA,SAAOM,MAAOlC,EAAOG,MAAMwB,UACzBC,EAAAA,EAAAA,KAACQ,EAAAA,EAAS,CACRC,UAAQ,EACRlC,MAAM,SACNmC,QAAQ,WACRf,KAAK,QACLC,MAAOR,EACPuB,SAAUlB,OAGdO,EAAAA,EAAAA,KAAA,SAAOM,MAAOlC,EAAOG,MAAMwB,UACzBC,EAAAA,EAAAA,KAACQ,EAAAA,EAAS,CACRC,UAAQ,EACRG,KAAK,WACLrC,MAAM,WACNmC,QAAQ,WACRf,KAAK,WACLC,MAAOL,EACPoB,SAAUlB,OAGdO,EAAAA,EAAAA,KAACa,EAAAA,EAAM,CAACH,QAAQ,YAAYE,KAAK,SAAQb,SAAC,WAEhC,KACVC,EAAAA,EAAAA,KAAA,KAAGc,KAAK,uBAAuBR,MAAOlC,EAAOO,KAAKoB,SAAC,0BAM3D,C","sources":["pages/Login/Login.tsx"],"sourcesContent":["import { useState, ChangeEvent, FormEvent, CSSProperties } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { authOperations } from \"../../redux/auth\";\r\nimport Button from \"@mui/material/Button\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport { AppDispatch } from \"../../store\";\r\nimport { blue } from \"@mui/material/colors\";\r\n\r\nconst styles: {\r\n  form: CSSProperties;\r\n  label: CSSProperties;\r\n  link: CSSProperties;\r\n} = {\r\n  form: {\r\n    width: 320,\r\n  },\r\n  label: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    marginBottom: 15,\r\n  },\r\n  link: {\r\n    color: \"#0d47a1\",\r\n    textDecoration: \"none\",\r\n    display: \"block\",\r\n    marginTop: -30,\r\n    textAlign: \"center\",\r\n    marginLeft: 20,\r\n  },\r\n};\r\n\r\nexport default function LoginView() {\r\n  const dispatch = useDispatch<AppDispatch>();\r\n  const [email, setEmail] = useState<string>(\"\");\r\n  const [password, setPassword] = useState<string>(\"\");\r\n\r\n  const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = event.target;\r\n    switch (name) {\r\n      case \"email\":\r\n        setEmail(value);\r\n        break;\r\n      case \"password\":\r\n        setPassword(value);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    dispatch(authOperations.logIn({ email, password }));\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Login Page</h1>\r\n\r\n      <form onSubmit={handleSubmit} style={styles.form} autoComplete=\"off\">\r\n        <label style={styles.label}>\r\n          <TextField\r\n            required\r\n            label=\"E-mail\"\r\n            variant=\"outlined\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n        <label style={styles.label}>\r\n          <TextField\r\n            required\r\n            type=\"password\"\r\n            label=\"Password\"\r\n            variant=\"outlined\"\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n        <Button variant=\"contained\" type=\"submit\">\r\n          Log-in\r\n        </Button>{\" \"}\r\n        <a href=\"/ts-movies/forgotpwd\" style={styles.link}>\r\n          Forgot password?\r\n        </a>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["styles","form","width","label","display","flexDirection","marginBottom","link","color","textDecoration","marginTop","textAlign","marginLeft","LoginView","dispatch","useDispatch","email","setEmail","useState","password","setPassword","handleChange","event","name","value","target","_jsxs","children","_jsx","onSubmit","e","preventDefault","authOperations","logIn","style","autoComplete","TextField","required","variant","onChange","type","Button","href"],"sourceRoot":""}