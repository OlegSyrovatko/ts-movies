{"version":3,"file":"static/js/348.6042c3bc.chunk.js","mappings":"+PAIA,MAAMA,GAAgBC,EAAAA,EAAAA,KAAqBC,EAAAA,EAAAA,KAACC,EAAAA,IAAQ,KAC9CC,EAAiB,6BAAAC,OAAgCC,KAAKN,IAE/CO,EAAeC,EAAAA,EAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,mbAmBzBC,EAAOJ,EAAAA,EAAOK,KAAIC,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,gKAUlBI,EAASP,EAAAA,EAAOQ,OAAMC,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,oWAKRP,GA0Bdc,GAZQV,EAAAA,EAAOW,MAAKC,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,+LAYZH,EAAAA,EAAOa,MAAKC,IAAAA,GAAAX,EAAAA,EAAAA,GAAA,gP,sBCxDjC,MAsEA,EAtEyBY,KAAO,IAADC,EAC7B,MAAOC,EAAOC,IAAYC,EAAAA,EAAAA,UAAiB,KACpCC,EAAQC,IAAaF,EAAAA,EAAAA,UAAkB,KACvCG,EAAQC,IAAaJ,EAAAA,EAAAA,WAAkB,IACvCK,EAAcC,IAAmBC,EAAAA,EAAAA,MAClCC,EAAkC,QAA5BX,EAAGQ,EAAaI,IAAI,gBAAQ,IAAAZ,EAAAA,EAAI,IAE5Ca,EAAAA,EAAAA,YAAU,KACJF,IACFG,EAAAA,EAAAA,IAAgBH,GAAQI,MAAMC,IAC5BX,EAAUW,EAAOC,QAAQ,GAE7B,GACC,CAACN,IAEJ,MAAMO,GAAWC,EAAAA,EAAAA,MAqBjB,OACEC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACE5C,EAAAA,EAAAA,KAACK,EAAY,CAAAuC,UACXF,EAAAA,EAAAA,MAAChC,EAAI,CAACmC,SAlBUC,IACpBA,EAAEC,iBAIFhB,EADkC,KAAVR,EAAe,CAAEA,SAAU,CAAC,GAEpDyB,EAAAA,QAAQC,OAAO,eACfb,EAAAA,EAAAA,IAAgBb,GAAOc,MAAMC,IAC3BX,EAAUW,EAAOC,SACjBV,GAAU,EAAK,IAEjBL,EAAS,IACTwB,EAAAA,QAAQE,QAAQ,EAMiBN,SAAA,EAC3B5C,EAAAA,EAAAA,KAACa,EAAM,CAACsC,KAAK,YAEbnD,EAAAA,EAAAA,KAACgB,EAAK,CACJoC,SA1BYN,IACpBtB,EAASsB,EAAEO,cAAcC,MAAM,EA0BvBH,KAAK,OACLI,aAAa,MACbC,WAAS,EACTC,YAAY,gBACZC,KAAK,QACLJ,MAAO/B,EACPoC,UAAQ,SAIb/B,GAA4B,IAAlBF,EAAOkC,SAChB5D,EAAAA,EAAAA,KAAA,KAAA4C,SAAG,6CAEL5C,EAAAA,EAAAA,KAAA,MAAA4C,SACGlB,EAAOkC,OAAS,GACflC,EAAOmC,KAAIC,IAAA,IAAC,GAAEC,EAAE,MAAEC,GAAOF,EAAA,OACvB9D,EAAAA,EAAAA,KAAA,MAAA4C,UACE5C,EAAAA,EAAAA,KAACiE,EAAAA,GAAI,CAACC,GAAE,WAAA/D,OAAa4D,GAAMI,MAAO,CAAEC,KAAM5B,GAAWI,SAClDoB,KAFID,EAIJ,QAGV,C","sources":["pages/Movies/Movies.styled.tsx","pages/Movies/Movies.tsx"],"sourcesContent":["import styled from \"@emotion/styled\";\r\nimport { FaSearch } from \"react-icons/fa\";\r\nimport { renderToStaticMarkup } from \"react-dom/server\";\r\n\r\nconst searchIconSVG = renderToStaticMarkup(<FaSearch />);\r\nconst searchIconDataURL = `data:image/svg+xml;base64,${btoa(searchIconSVG)}`;\r\n\r\nexport const SearchHeader = styled.div`\r\n  top: 0;\r\n  left: 0;\r\n  position: sticky;\r\n  z-index: 1100;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  min-height: 64px;\r\n  padding-right: 24px;\r\n  padding-left: 24px;\r\n  padding-top: 12px;\r\n  padding-bottom: 12px;\r\n  color: #fff;\r\n  background-color: #3f51b5;\r\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\r\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\r\n`;\r\n\r\nexport const Form = styled.form`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n  max-width: 600px;\r\n  background-color: #fff;\r\n  border-radius: 3px;\r\n  overflow: hidden;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  display: inline-block;\r\n  width: 48px;\r\n  height: 48px;\r\n  border: 0;\r\n  background-image: url(\"${searchIconDataURL}\");\r\n  background-size: 40%;\r\n  background-repeat: no-repeat;\r\n  background-position: center;\r\n  opacity: 0.6;\r\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  cursor: pointer;\r\n  outline: none;\r\n\r\n  &:hover {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  position: absolute;\r\n  width: 1px;\r\n  height: 1px;\r\n  padding: 0;\r\n  overflow: hidden;\r\n  clip: rect(0, 0, 0, 0);\r\n  white-space: nowrap;\r\n  clip-path: inset(50%);\r\n  border: 0;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  display: inline-block;\r\n  width: 100%;\r\n  font: inherit;\r\n  font-size: 20px;\r\n  border: none;\r\n  outline: none;\r\n  padding-left: 4px;\r\n  padding-right: 4px;\r\n\r\n  &::placeholder {\r\n    font: inherit;\r\n    font-size: 18px;\r\n  }\r\n`;\r\n","import React, { useState, useEffect, ChangeEvent, FormEvent } from \"react\";\r\nimport { Link, useLocation, useSearchParams } from \"react-router-dom\";\r\nimport { SearchHeader, Form, Button, Input } from \"./Movies.styled\";\r\nimport { getSearchMovies } from \"../../services/content-api\";\r\nimport { Loading } from \"notiflix/build/notiflix-loading-aio\";\r\n\r\nimport {\r\n  Movie,\r\n  SearchMoviesResponse\r\n} from \"../../models\";\r\n\r\nconst Movies: React.FC = () => {\r\n  const [query, setQuery] = useState<string>(\"\");\r\n  const [movies, setMovies] = useState<Movie[]>([]);\r\n  const [getted, setGetted] = useState<boolean>(false);\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n  const queryS = searchParams.get(\"query\") ?? \"\";\r\n\r\n  useEffect(() => {\r\n    if (queryS) {\r\n      getSearchMovies(queryS).then((moveis: SearchMoviesResponse) => {\r\n        setMovies(moveis.results);\r\n      });\r\n    }\r\n  }, [queryS]);\r\n\r\n  const location = useLocation();\r\n\r\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setQuery(e.currentTarget.value);\r\n  };\r\n\r\n  const handleSubmit = (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n\r\n    \r\n    const nextParams: any = query !== \"\" ? { query } : {};\r\n    setSearchParams(nextParams);\r\n    Loading.circle(\"Loading...\");\r\n    getSearchMovies(query).then((moveis: SearchMoviesResponse) => {\r\n      setMovies(moveis.results);\r\n      setGetted(true);\r\n    });\r\n    setQuery(\"\");\r\n    Loading.remove();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <SearchHeader>\r\n        <Form onSubmit={handleSubmit}>\r\n          <Button type=\"submit\"></Button>\r\n\r\n          <Input\r\n            onChange={handleChange}\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search movies\"\r\n            name=\"query\"\r\n            value={query}\r\n            required\r\n          />\r\n        </Form>\r\n      </SearchHeader>\r\n      {getted && movies.length === 0 && (\r\n        <p>We don't have any movies for this query</p>\r\n      )}\r\n      <ul>\r\n        {movies.length > 1 &&\r\n          movies.map(({ id, title }) => (\r\n            <li key={id}>\r\n              <Link to={`/movies/${id}`} state={{ from: location }}>\r\n                {title}\r\n              </Link>\r\n            </li>\r\n          ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\nexport default Movies;\r\n"],"names":["searchIconSVG","renderToStaticMarkup","_jsx","FaSearch","searchIconDataURL","concat","btoa","SearchHeader","styled","div","_templateObject","_taggedTemplateLiteral","Form","form","_templateObject2","Button","button","_templateObject3","Input","label","_templateObject4","input","_templateObject5","Movies","_searchParams$get","query","setQuery","useState","movies","setMovies","getted","setGetted","searchParams","setSearchParams","useSearchParams","queryS","get","useEffect","getSearchMovies","then","moveis","results","location","useLocation","_jsxs","_Fragment","children","onSubmit","e","preventDefault","Loading","circle","remove","type","onChange","currentTarget","value","autoComplete","autoFocus","placeholder","name","required","length","map","_ref","id","title","Link","to","state","from"],"sourceRoot":""}